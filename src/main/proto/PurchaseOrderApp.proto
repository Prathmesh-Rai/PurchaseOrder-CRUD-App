syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.Brightly";
option java_outer_classname = "PurchaseOrderAppProto";

package PurchaseOrderAppProto;

message PurchaseOrderRequest{
    string name = 1 ;
    int64 poID = 2 ;
    string description = 3 ;
    string notes = 4 ;
    Supplier supplier = 5 ;
    Address shippingAddress = 6 ;
    repeated Item items = 7 ;
    POStatus status = 8 ;
}
message PurchaseOrderResponse
{
    int64 poId = 1;
}

message Item{
    string name = 1 ;
    int64 itemID = 2 ;
    string description = 3 ;
    int64 quantity = 4 ;
    int64 price = 5 ;
    ItemStatus status = 6 ;
}

message Supplier{
    string name = 1 ;
    int64 supplierID = 2 ;
    Address supplierAdd = 3 ;
    string email = 4 ;
    string phoneNo = 5 ;
    string fax = 6 ;
}

message Address{
    string city = 1 ;
    string state = 2 ;
    string country = 3 ;
    string pin = 4 ;
}




message Empty{

}

message GetPurchaseOrderResponse{
    string name = 1 ;
    int64 poID = 2 ;
    string description = 3 ;
    string notes = 4 ;
    Supplier supplier = 5 ;
    Address shippingAddress = 6 ;
    repeated Item items = 7 ;
    POStatus status = 8 ;
}

message GetPurchaseOrderRequest{
    int64 poId = 1 ;
}

enum POStatus{
    draft = 0 ;
    submitted = 1 ;
}

enum ItemStatus{
    available = 0 ;
    unavailable = 1 ;
}

message updateStatusRequest{
    int64 poId = 1 ;
}



service PurchaseOrderRPCs{
    rpc createPurchaseOrder(PurchaseOrderRequest) returns(PurchaseOrderResponse) {}
    rpc getAllPurchaseOrders(Empty) returns(stream GetPurchaseOrderResponse) {}
    rpc getPurchaseOrder(GetPurchaseOrderRequest) returns(GetPurchaseOrderResponse) {}
    rpc updatePurchaseOrder(PurchaseOrderRequest) returns(PurchaseOrderResponse) {}
    rpc updateStatus(updateStatusRequest) returns(GetPurchaseOrderResponse) {}
}



